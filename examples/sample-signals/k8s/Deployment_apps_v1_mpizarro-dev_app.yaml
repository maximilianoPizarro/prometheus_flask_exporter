apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: "false"
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: https://github.com/maximilianoPizarro/prometheus_flask_exporter
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"app:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"app\")].image","pause":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  labels:
    app: app
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: app
    app.kubernetes.io/name: app
    app.kubernetes.io/part-of: app-flask
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: 3.9-ubi8
  name: app
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: app
        deployment: app
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/mpizarro-dev/app@sha256:726c7e535f0537675a03b45e0a54c798bd2ad094194fa60d23ae22180403e4a1
        imagePullPolicy: Always
        name: app
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
